{
  "_args": [
    [
      {
        "raw": "ember-ace@git+https://github.com/adityaU/ember-ace.git",
        "scope": null,
        "escapedName": "ember-ace",
        "name": "ember-ace",
        "rawSpec": "git+https://github.com/adityaU/ember-ace.git",
        "spec": "git+https://github.com/adityaU/ember-ace.git",
        "type": "hosted",
        "hosted": {
          "type": "github",
          "ssh": "git@github.com:adityaU/ember-ace.git",
          "sshUrl": "git+ssh://git@github.com/adityaU/ember-ace.git",
          "httpsUrl": "git+https://github.com/adityaU/ember-ace.git",
          "gitUrl": "git://github.com/adityaU/ember-ace.git",
          "shortcut": "github:adityaU/ember-ace",
          "directUrl": "https://raw.githubusercontent.com/adityaU/ember-ace/master/package.json"
        }
      },
      "/Users/adityau/workspace/AfterGlow/frontend"
    ]
  ],
  "_from": "git+https://github.com/adityaU/ember-ace.git",
  "_id": "ember-ace@0.1.1",
  "_inCache": true,
  "_installable": true,
  "_location": "/ember-ace",
  "_phantomChildren": {
    "broccoli-plugin": "1.3.0",
    "can-symlink": "1.0.0",
    "fast-ordered-set": "1.0.3",
    "fs-tree-diff": "0.5.7",
    "heimdalljs": "0.2.5",
    "heimdalljs-logger": "0.1.9",
    "rimraf": "2.6.2",
    "symlink-or-copy": "1.2.0"
  },
  "_requested": {
    "raw": "ember-ace@git+https://github.com/adityaU/ember-ace.git",
    "scope": null,
    "escapedName": "ember-ace",
    "name": "ember-ace",
    "rawSpec": "git+https://github.com/adityaU/ember-ace.git",
    "spec": "git+https://github.com/adityaU/ember-ace.git",
    "type": "hosted",
    "hosted": {
      "type": "github",
      "ssh": "git@github.com:adityaU/ember-ace.git",
      "sshUrl": "git+ssh://git@github.com/adityaU/ember-ace.git",
      "httpsUrl": "git+https://github.com/adityaU/ember-ace.git",
      "gitUrl": "git://github.com/adityaU/ember-ace.git",
      "shortcut": "github:adityaU/ember-ace",
      "directUrl": "https://raw.githubusercontent.com/adityaU/ember-ace/master/package.json"
    }
  },
  "_requiredBy": [
    "#DEV:/"
  ],
  "_resolved": "git+https://github.com/adityaU/ember-ace.git#21c81f62b8cd1ded250be3249a49b107f8907bb8",
  "_shasum": "3c40c72c237df2afe264fc974e18a9224ac8bc16",
  "_shrinkwrap": null,
  "_spec": "ember-ace@git+https://github.com/adityaU/ember-ace.git",
  "_where": "/Users/adityau/workspace/AfterGlow/frontend",
  "author": {
    "name": "Dan Freeman"
  },
  "bugs": {
    "url": "https://github.com/dfreeman/ember-ace/issues"
  },
  "dependencies": {
    "ace-builds": "^1.2.2",
    "broccoli-merge-trees": "^1.1.4",
    "broccoli-plugin": "^1.2.1",
    "ember-cli-babel": "^5.1.6",
    "ember-cli-htmlbars": "^1.0.3",
    "ember-cli-node-assets": "^0.1.4"
  },
  "description": "An Ember addon for the Ace code editor",
  "devDependencies": {
    "ember-cli": "^2.9.1",
    "ember-cli-dependency-checker": "^1.2.0",
    "ember-cli-eslint": "^3.0.0",
    "ember-cli-htmlbars-inline-precompile": "^0.3.6",
    "ember-cli-inject-live-reload": "^1.4.0",
    "ember-cli-page-object": "^1.7.0",
    "ember-cli-qunit": "^3.0.2",
    "ember-cli-release": "^1.0.0-beta.2",
    "ember-cli-sri": "^2.1.0",
    "ember-cli-test-loader": "^1.1.0",
    "ember-cli-uglify": "^1.2.0",
    "ember-disable-prototype-extensions": "^1.1.0",
    "ember-load-initializers": "^0.6.3",
    "ember-resolver": "^2.0.3",
    "ember-sinon": "^0.6.0",
    "loader.js": "^4.0.1"
  },
  "directories": {
    "doc": "doc",
    "test": "tests"
  },
  "ember-addon": {
    "configPath": "tests/dummy/config",
    "versionCompatibility": {
      "ember": ">=1.13.0 <3.0.0"
    }
  },
  "engines": {
    "node": ">= 0.10.0"
  },
  "gitHead": "21c81f62b8cd1ded250be3249a49b107f8907bb8",
  "homepage": "https://github.com/dfreeman/ember-ace#readme",
  "keywords": [
    "ember-addon"
  ],
  "license": "MIT",
  "name": "ember-ace",
  "optionalDependencies": {},
  "readme": "# Ember Ace [![Build Status](https://travis-ci.org/dfreeman/ember-ace.svg?branch=master)](https://travis-ci.org/dfreeman/ember-ace)\n\nAn Ember component wrapping [Ace editor](https://ace.c9.io).\n\n## Installation\n\n```bash\nember install ember-ace\n```\n\n## Usage\n\n```hbs\n{{ember-ace lines=10 value=value update=(action 'valueUpdated')}}\n```\n\n### Options\n\nSee the application controller in this addon's dummy application for usage examples of many of these options.\n\n#### Core\n - `value`: the string value of the editor\n - `update(newValue)`: an action triggered when the value of the editor changes\n - `ready(editor)`: an action triggered when the Ace `Editor` is instantiated\n\n#### Configuration\n - `mode`: the mode for the editor to operate in, either a string (e.g. `\"ace/mode/javascript\"`) or a `Mode` instance\n - `theme`: the color scheme to be used (e.g. `\"ace/theme/chaos\"`);\n - `useSoftTabs`: a boolean indicating whether to use spaces for indentation\n - `tabSize`: the number of spaces a tab represents\n - `useWrapMode`: a boolean indicating whether to wrap long lines\n - `highlightActiveLine`: a boolean indicating whether the active line should be highlighted\n - `showPrintMargin`: a boolean indicating whether a line indicating the print margin should be shown\n - `printMarginColumn`: a boolean indicating what column the print margin (if enabled) should appear at\n - `showInvisibles`: a boolean indicating whether to show invisible characters\n - `readOnly`: a boolean indicating whether the editor is locked to the user\n\n#### Sizing\n - `lines`: the number of lines the editor should show (shorthand for setting both `minLines` and `maxLines`)\n - `minLines`: the minimum number of lines the editor should contain\n - `maxLines`: the maximum number of lines the editor should expand to\n\n#### Overlays\n - `markers`: an array of marker objects, each containing the following keys:\n   - `class`: the class name that should be applied to the element(s) overlaying the marked text\n   - `range`: an `Ace.Range` instance denoting the section of text to be marked\n   - `inFront`: a boolean (default `true`) indicating whether the marker should be in front of or behind the text layer\n - `annotations`: an array of line annotation objects, each of which contains the following keys:\n   - `type`: one of `error`, `warning` or `info`\n   - `row`: the zero-based index of the row the annotation should appear on\n   - `text`: the text to appear when the annotation is hovered\n\n### Build Configuration\n\nBuild configuration can be specified in an `ace` key in `ember-cli-build.js`:\n\n```js\nnew EmberApp(defaults, {\n  ace: {\n    themes: ['ambiance', 'chaos'],\n    modes: ['javascript'],\n    workers: ['javascript']\n  }\n});\n```\n\nFor each of the following types, you may specify an array of names to be included in your Ace build (as above).\n\n - `modes`: syntax highlighting and editor behaviors for different languages ([see all](https://github.com/ajaxorg/ace/tree/master/lib/ace/mode))\n - `workers`: background workers to perform more expensive processing available for some modes ([see all, intermingled with modes](https://github.com/ajaxorg/ace/tree/master/lib/ace/mode))\n - `themes`: color schemes for the editor ([see all](https://github.com/ajaxorg/ace/tree/master/lib/ace/theme))\n - `exts`: editor extensions, like spellcheck and Emmet abbreviations ([see all](https://github.com/ajaxorg/ace/tree/master/lib/ace/ext))\n - `keybindings`: common keybindings from editors like Emacs and Vim ([see all](https://github.com/ajaxorg/ace/tree/master/lib/ace/keyboard))\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/dfreeman/ember-ace.git"
  },
  "scripts": {
    "build": "ember build",
    "start": "ember server",
    "test": "ember try:each"
  },
  "version": "0.1.1"
}
