{
  "_args": [
    [
      {
        "raw": "babel-plugin-debug-macros@^0.2.0-beta.6",
        "scope": null,
        "escapedName": "babel-plugin-debug-macros",
        "name": "babel-plugin-debug-macros",
        "rawSpec": "^0.2.0-beta.6",
        "spec": ">=0.2.0-beta.6 <0.3.0",
        "type": "range"
      },
      "/Users/adityau/workspace/AfterGlow/frontend/node_modules/ember-cli-selectize/node_modules/ember-cli-babel"
    ]
  ],
  "_from": "babel-plugin-debug-macros@>=0.2.0-beta.6 <0.3.0",
  "_id": "babel-plugin-debug-macros@0.2.0-beta.6",
  "_inCache": true,
  "_installable": true,
  "_location": "/ember-cli-selectize/babel-plugin-debug-macros",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/babel-plugin-debug-macros_0.2.0-beta.6_1527123609994_0.3976133874969858"
  },
  "_npmUser": {
    "name": "rwjblue",
    "email": "me@rwjblue.com"
  },
  "_phantomChildren": {},
  "_requested": {
    "raw": "babel-plugin-debug-macros@^0.2.0-beta.6",
    "scope": null,
    "escapedName": "babel-plugin-debug-macros",
    "name": "babel-plugin-debug-macros",
    "rawSpec": "^0.2.0-beta.6",
    "spec": ">=0.2.0-beta.6 <0.3.0",
    "type": "range"
  },
  "_requiredBy": [
    "/ember-cli-selectize/ember-cli-babel"
  ],
  "_resolved": "https://registry.npmjs.org/babel-plugin-debug-macros/-/babel-plugin-debug-macros-0.2.0-beta.6.tgz",
  "_shasum": "ecdf6e408d5c863ab21740d7ad7f43f027d2f912",
  "_shrinkwrap": null,
  "_spec": "babel-plugin-debug-macros@^0.2.0-beta.6",
  "_where": "/Users/adityau/workspace/AfterGlow/frontend/node_modules/ember-cli-selectize/node_modules/ember-cli-babel",
  "bugs": {
    "url": "https://github.com/chadhietala/babel-debug-macros/issues"
  },
  "contributors": [
    {
      "name": "Chad Hietala",
      "email": "chadhietala@gmail.com"
    },
    {
      "name": "Kris Selden",
      "email": "kris.selden@gmail.com"
    },
    {
      "name": "Robert Jackson",
      "email": "me@rwjblue.com"
    }
  ],
  "dependencies": {
    "semver": "^5.3.0"
  },
  "description": "Debug macros and feature flag stripping",
  "devDependencies": {
    "@babel/core": "^7.0.0-beta.42",
    "@babel/preset-env": "^7.0.0-beta.42",
    "babel-core": "^6.26.0",
    "babel-preset-env": "^1.6.1",
    "eslint": "^4.19.1",
    "eslint-config-prettier": "^2.9.0",
    "eslint-plugin-node": "^6.0.1",
    "eslint-plugin-prettier": "^2.6.0",
    "jest": "^21.0.0",
    "prettier": "^1.12.1"
  },
  "directories": {},
  "dist": {
    "shasum": "ecdf6e408d5c863ab21740d7ad7f43f027d2f912",
    "tarball": "https://registry.npmjs.org/babel-plugin-debug-macros/-/babel-plugin-debug-macros-0.2.0-beta.6.tgz",
    "fileCount": 109,
    "unpackedSize": 198961,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbBg6aCRA9TVsSAnZWagAAMMMP/Ar1EyGhhA34b4SrLZqM\nhTw+75AQsAn5m/Y2hx+JTXoJ7z+xnw8aNtomqP5Hpul1+YTwmse/GvV76caO\nOSmKyom1SHoAfXADM6GmYAt06GmBeoXCSONnGIJOaRYYtJJ8y6Q3/iU/MlV/\n81SOG3eSRNqw7CMsZpGLaZZTslwqMMdx5WheNZvk3Iohv3iAGVEfwXvNzArs\nb7kqN2eQmBa/1n789e6oJZdZcWohFYdAEB9SRuUvGXR6cToxJm5f9lv+8pPd\nzIouXC5/EhBnj8Uq8YXp67uLzdwL0ORY12KSBs2e1uGMmNTI+Plx7vNLCqDX\nfaC+VxT+uqGpTwuAYhmPllgXF1WAnrp0Bq6h3/h3Vt+jOPGLb8UULAaW1c+y\n132g2S408yrSNEiL2OwYhYsOCQIffGavAmjkwb+B5WY458/GFu6qYzcMCDPJ\nG++rW10LVh/XwBXeSP3PzLREOiFd0VfXR67xQM1D15+939pgnFGH5iC1eoQ8\nmRx3IH97FOPC+eEHQHLAMT1M9ruKgp6kSe7z2QYK9d7J5NrWfZZxVRpBVHKz\n+c1JZPs2mpBgiOeAkw4hrQRj/6v+ngCvAnOebAqgf/ub/YyGxCnPD8fhSFfo\ncJoQYAqun4RosReLbCajzEQm2diaYiuIAL7RlLz3i+UMHVN8HJnVybK2yUjB\ntr3Q\r\n=p3RD\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "engines": {
    "node": ">=4"
  },
  "files": [
    "src/",
    "!src/tests"
  ],
  "homepage": "https://github.com/chadhietala/babel-debug-macros#readme",
  "jest": {
    "testMatch": [
      "<rootDir>/tests/**/*-test.js"
    ]
  },
  "keywords": [
    "babel",
    "plugin"
  ],
  "license": "MIT",
  "main": "src/index.js",
  "maintainers": [
    {
      "name": "chadhietala",
      "email": "chadhietala@gmail.com"
    },
    {
      "name": "rwjblue",
      "email": "me@rwjblue.com"
    }
  ],
  "name": "babel-plugin-debug-macros",
  "optionalDependencies": {},
  "peerDependencies": {
    "@babel/core": "^7.0.0-beta.42"
  },
  "readme": "# Babel Debug Macros And Feature Flags\n\nThis provides debug macros and feature flagging.\n\n## Setup\n\nThe plugin takes 4 types options: `flags`, `svelte`, `debugTools`, and\n`externalizeHelpers`. The `importSpecifier` is used as a hint to this plugin as\nto where macros are being imported and completely configurable by the host.\n\nLike Babel you can supply your own helpers using the `externalizeHelpers`\noptions.\n\n```js\n{\n  plugins: [\n    ['babel-debug-macros', {\n      // @required\n      debugTools: {\n        isDebug: true,\n        source: 'debug-tools',\n        // @optional\n        assertPredicateIndex: 0\n      },\n\n      flags: [\n        { source: '@ember/env-flags', flags: { DEBUG: true } },\n        {\n          name: 'ember-source',\n          source: '@ember/features',\n          flags: {\n            FEATURE_A: false,\n            FEATURE_B: true,\n            DEPRECATED_CONTROLLERS: \"2.12.0\"\n          }\n        }\n      ],\n\n      // @optional\n      svelte: {\n        'ember-source': \"2.15.0\"\n      },\n\n      // @optional\n      externalizeHelpers: {\n        module: true,\n        // global: '__my_global_ns__'\n      }\n    }]\n  ]\n}\n```\n\nFlags and features are inlined into the consuming module so that something like UglifyJS will DCE them when they are unreachable.\n\n## Simple environment and fetaure flags\n\n```javascript\nimport { DEBUG } from '@ember/env-flags';\nimport { FEATURE_A, FEATURE_B } from '@ember/features';\n\nif (DEBUG) {\n  console.log('Hello from debug');\n}\n\nlet woot;\nif (FEATURE_A) {\n  woot = () => 'woot';\n} else if (FEATURE_B) {\n  woot = () => 'toow';\n}\n\nwoot();\n```\n\nTransforms to:\n\n```javascript\nif (true /* DEBUG */) {\n  console.log('Hello from debug');\n}\n\nlet woot;\nif (false /* FEATURE_A */) {\n  woot = () => 'woot';\n} else if (true) {\n  woot = () => 'toow';\n}\n\nwoot();\n```\n\n## `warn` macro expansion\n\n```javascript\nimport { warn } from 'debug-tools';\n\nwarn('this is a warning');\n```\n\nExpands into:\n\n```javascript\n(true && console.warn('this is a warning'));\n```\n\n## `assert` macro expansion\n\nThe `assert` macro can expand in a more intelligent way with the correct\nconfiguration. When `babel-plugin-debug-macros` is provided with the\n`assertPredicateIndex` the predicate is injected in front of the assertion\nin order to avoid costly assertion message generation when not needed.\n\n```javascript\nimport { assert } from 'debug-tools';\n\nassert((() => {\n  return 1 === 1;\n})(), 'You bad!');\n```\n\nWith the `debugTools: { assertPredicateIndex: 0 }` configuration the following expansion is done:\n\n```js\n(true && !((() => { return 1 === 1;})()) && console.assert(false, 'this is a warning'));\n```\n\nWhen `assertPredicateIndex` is not specified, the following expansion is done:\n\n```javascript\n(true && console.assert((() => { return 1 === 1;})(), 'this is a warning'));\n```\n\n## `deprecate` macro expansion\n\n```javascript\nimport { deprecate } from 'debug-tools';\n\nlet foo = 2;\n\ndeprecate('This is deprecated.', foo % 2);\n```\n\nExpands into:\n\n```javascript\nlet foo = 2;\n\n(true && !(foo % 2) && console.warn('This is deprecated.'));\n```\n\n## Externalized Helpers\n\nWhen you externalize helpers you must provide runtime implementations for the\nabove macros. An expansion will still occur, however we will emit references to\nthose runtime helpers.\n\nA global expansion looks like the following:\n\n```javascript\nimport { warn } from 'debug-tools';\n\nwarn('this is a warning');\n```\n\nExpands into:\n\n```javascript\n(true && Ember.warn('this is a warning'));\n```\n\nWhile externalizing the helpers to a module looks like the following:\n\n```javascript\nimport { warn } from 'debug-tools';\n\nwarn('this is a warning');\n```\n\nExpands into:\n\n```javascript\n(true && warn('this is a warning'));\n```\n\n# Svelte\n\nSvelte allows for consumers to opt into stripping deprecated code from your\ndependecies. By adding a package name and minimum version that contains no\ndeprecations, that code will be compiled away.\n\nFor example, consider you are on `ember-source@2.10.0` and you have no\ndeprecations. All deprecated code in `ember-source` that is `<=2.10.0` will be\nremoved.\n\n```\n\nsvelte: {\n  \"ember-source\": \"2.10.0\"\n}\n\n```\n\nNow if you bump to `ember-source@2.11.0` you may encounter new deprecations.\nThe workflow would then be to clear out all deprecations and then bump the\nversion in the `svelte` options.\n\n```\nsvelte: {\n  \"ember-source\": \"2.11.0\"\n}\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/chadhietala/babel-debug-macros.git"
  },
  "scripts": {
    "test": "jest"
  },
  "version": "0.2.0-beta.6"
}
